using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks.Dataflow;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Diagnosers;
using BenchmarkDotNet.Exporters.Csv;
using FlatSharp;

namespace BenchmarkCore
{

    [EventPipeProfiler(EventPipeProfile.CpuSampling)]
    [MinColumn, MaxColumn, AllStatisticsColumn, MemoryDiagnoser]
    public class IngressBenchmark
    {
        private ThreadLocal<byte[]> buff = new ThreadLocal<byte[]>(()=> new byte[1024]);
        private TransformBlock<Map, byte[]> serializeNodeBlock;
        private string[] header;
        private string[][] rows;

        [GlobalSetup]
        public void Setup()
        {
            header = "FILEID,STUSAB,SUMLEV,GEOVAR,GEOCOMP,CHARITER,CIFSN_x,LOGRECNO,GEOID,GEOCODE,REGION,DIVISION,STATE,STATENS,COUNTY,COUNTYCC,COUNTYNS,COUSUB,COUSUBCC,COUSUBNS,SUBMCD,SUBMCDCC,SUBMCDNS,ESTATE,ESTATECC,ESTATENS,CONCIT,CONCITCC,CONCITNS,PLACE,PLACECC,PLACENS,TRACT,BLKGRP,BLOCK,AIANHH,AIHHTLI,AIANHHFP,AIANHHCC,AIANHHNS,AITS,AITSFP,AITSCC,AITSNS,TTRACT,TBLKGRP,ANRC,ANRCCC,ANRCNS,CBSA,MEMI,CSA,METDIV,NECTA,NMEMI,CNECTA,NECTADIV,CBSAPCI,NECTAPCI,UA,UATYPE,UR,CD116,CD118,CD119,CD120,CD121,SLDU18,SLDU22,SLDU24,SLDU26,SLDU28,SLDL18,SLDL22,SLDL24,SLDL26,SLDL28,VTD,VTDI,ZCTA,SDELM,SDSEC,SDUNI,PUMA,AREALAND,AREAWATR,BASENAME,NAME,FUNCSTAT,GCUNI,POP100,HU100,INTPTLAT,INTPTLON,LSADC,PARTFLAG,UGA,CIFSN_yxy,P0050001,P0050002,P0050003,P0050004,P0050005,P0050006,P0050007,P0050008,P0050009,P0050010".Split(',');
            
            rows = new[]
            {
                "PLST,DC,50,00,0,0,0,2,0500000US11001,11001,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,158316124,18709762,District of Columbia,District of Columbia,F,,689545,350364,38.904247399999996,-77.0165167,00,,,1,689545,633468,273194,285810,3193,33545,432,37294,56077,51147,7543,2212,8646,247,23425,2334,1340,112,3856,70,20,767,190,300,85,4262,1379,394,23,792,88,3,781,153,273,15,63,39,127,32,49,27,2,0,4,18,613,129,8,354,14,51,1,1,21,3,16,9,3,0,3,0,51,20,18,0,4,4,5,4,4,689545,77652,611893,582408,261771,282066,1277,33192,349,3753,29485,26897,7099,1697,8414,196,3702,2189,1284,108,1751,62,18,41,168,165,3,2335,1115,350,20,329,70,1,30,134,61,4,54,34,49,32,32,15,2,0,0,3,230,102,5,68,11,34,1,1,0,0,3,4,1,0,0,0,23,13,1,0,4,4,1,0,0,2,575161,532702,244170,226137,2554,31093,369,28379,42459,38841,5267,1835,5490,204,18961,1821,943,91,3097,61,16,599,164,227,65,3122,1044,245,18,594,51,2,659,104,148,13,47,29,89,21,28,15,1,0,0,14,459,88,7,286,10,31,0,0,13,3,15,5,1,0,0,0,37,16,17,0,0,4,0,0,0,575161,60375,514786,493346,234767,223540,1063,30795,305,2876,21440,19540,4997,1462,5362,170,2979,1730,909,87,1457,53,14,33,149,135,3,1722,870,211,15,259,45,0,25,94,46,4,40,24,36,21,25,3,1,0,0,3,164,70,5,51,10,22,0,0,0,0,2,4,0,0,0,0,14,9,1,0,0,4,0,0,0,350364,312448,37916,3,40682,5606,2278,315,2727,286,35076,23802,818,10456".Split(','),
                "PLST,DC,60,00,0,0,0,3,0600000US1100150000,1100150000,3,5,11,1702382,1.0,H6,1702382.0,50000.0,C5,2390665.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,99999.0,9.0,999.0,99999.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,158316124,18709762,Washington,Washington city,F,,689545,350364,38.904247399999996,-77.0165167,25,,,1,689545,633468,273194,285810,3193,33545,432,37294,56077,51147,7543,2212,8646,247,23425,2334,1340,112,3856,70,20,767,190,300,85,4262,1379,394,23,792,88,3,781,153,273,15,63,39,127,32,49,27,2,0,4,18,613,129,8,354,14,51,1,1,21,3,16,9,3,0,3,0,51,20,18,0,4,4,5,4,4,689545,77652,611893,582408,261771,282066,1277,33192,349,3753,29485,26897,7099,1697,8414,196,3702,2189,1284,108,1751,62,18,41,168,165,3,2335,1115,350,20,329,70,1,30,134,61,4,54,34,49,32,32,15,2,0,0,3,230,102,5,68,11,34,1,1,0,0,3,4,1,0,0,0,23,13,1,0,4,4,1,0,0,2,575161,532702,244170,226137,2554,31093,369,28379,42459,38841,5267,1835,5490,204,18961,1821,943,91,3097,61,16,599,164,227,65,3122,1044,245,18,594,51,2,659,104,148,13,47,29,89,21,28,15,1,0,0,14,459,88,7,286,10,31,0,0,13,3,15,5,1,0,0,0,37,16,17,0,0,4,0,0,0,575161,60375,514786,493346,234767,223540,1063,30795,305,2876,21440,19540,4997,1462,5362,170,2979,1730,909,87,1457,53,14,33,149,135,3,1722,870,211,15,259,45,0,25,94,46,4,40,24,36,21,25,3,1,0,0,3,164,70,5,51,10,22,0,0,0,0,2,4,0,0,0,0,14,9,1,0,0,4,0,0,0,350364,312448,37916,3,40682,5606,2278,315,2727,286,35076,23802,818,10456".Split(','),
                "PLST,DC,140,00,0,0,0,4,1400000US11001000101,11001000101,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,101.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199776,5261,1.01,Census Tract 1.01,S,,1406,999,38.9076994,-77.0547765,CT,,,1,1406,1259,1083,47,5,92,1,31,147,135,17,8,22,2,86,0,0,0,0,0,0,0,0,0,0,11,2,1,1,0,0,0,4,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1406,140,1266,1199,1054,47,4,90,1,3,67,61,16,5,22,1,17,0,0,0,0,0,0,0,0,0,0,5,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1288,1164,1005,39,2,90,1,27,124,116,17,8,11,2,78,0,0,0,0,0,0,0,0,0,0,8,2,1,1,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1288,123,1165,1110,977,39,2,88,1,3,55,50,16,5,11,1,17,0,0,0,0,0,0,0,0,0,0,5,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,999,865,134,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,5,1400000US11001000102,11001000102,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,102.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1706484,516665,1.02,Census Tract 1.02,S,,3417,2053,38.905421999999994,-77.0620045,CT,,,1,3417,3097,2783,57,3,176,2,76,320,304,14,25,62,2,187,1,7,0,0,1,0,1,3,1,0,16,3,0,0,5,0,0,2,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3417,316,3101,2966,2711,56,0,176,1,22,135,128,14,13,62,0,27,1,7,0,0,1,0,0,3,0,0,7,3,0,0,1,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2929,2716,2427,53,3,161,0,72,213,208,5,12,34,1,145,1,6,0,0,1,0,0,3,0,0,5,0,0,0,1,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2929,248,2681,2599,2365,53,0,161,0,20,82,80,5,4,34,0,26,1,6,0,0,1,0,0,3,0,0,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2053,1724,329,3,10,0,0,0,0,0,10,0,0,10".Split(','),
                "PLST,DC,140,00,0,0,0,6,1400000US11001000201,11001000201,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,201.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,505004,0,2.01,Census Tract 2.01,S,,4108,11,38.909217100000006,-77.0743418,CT,,,1,4108,3697,2535,348,9,624,6,175,411,383,62,8,127,0,158,0,5,2,10,0,0,4,0,6,1,25,0,6,0,9,0,0,4,1,2,2,0,0,1,0,0,0,0,0,0,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4108,456,3652,3398,2399,339,4,621,6,29,254,240,60,6,127,0,29,0,5,2,5,0,0,0,0,6,0,14,0,6,0,4,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4079,3694,2535,346,9,624,6,174,385,370,62,6,127,0,156,0,5,2,5,0,0,0,0,6,1,13,0,2,0,7,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4079,435,3644,3396,2399,337,4,621,6,29,248,238,60,6,127,0,27,0,5,2,5,0,0,0,0,6,0,10,0,2,0,4,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,3,4030,0,0,0,0,0,4030,3989,0,41".Split(','),
                "PLST,DC,140,00,0,0,0,7,1400000US11001000202,11001000202,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,202.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,776435,439661,2.02,Census Tract 2.02,S,,4672,2169,38.906304799999994,-77.0696362,CT,,,1,4672,4278,3573,193,11,399,0,102,394,380,31,15,100,0,216,5,7,2,1,0,0,3,0,0,0,9,1,2,0,4,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,4672,357,4315,4100,3492,184,3,396,0,25,215,209,31,14,100,0,50,5,7,2,0,0,0,0,0,0,0,5,1,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4212,3897,3236,182,4,380,0,95,315,303,31,13,66,0,178,5,4,2,1,0,0,3,0,0,0,8,1,2,0,4,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4212,313,3899,3735,3164,173,3,377,0,18,164,158,31,12,66,0,38,5,4,2,0,0,0,0,0,0,0,5,1,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2169,1814,355,3,844,15,15,0,0,0,829,811,0,18".Split(','),
                "PLST,DC,140,00,0,0,0,8,1400000US11001000300,11001000300,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,300.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1042157,2305,3,Census Tract 3,S,,6161,2845,38.9179099,-77.0748728,CT,,,1,6161,5553,4645,260,16,488,6,138,608,571,46,29,143,2,322,6,5,0,14,0,0,4,0,0,0,32,3,1,0,10,1,0,10,0,4,0,1,1,1,0,0,0,0,0,0,0,4,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,6161,557,5604,5305,4533,248,11,482,5,26,299,284,44,25,137,2,67,4,1,0,4,0,0,0,0,0,0,10,2,1,0,3,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,4,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,2,5081,4640,3861,223,16,433,6,101,441,407,26,27,86,2,246,0,4,0,14,0,0,2,0,0,0,29,3,1,0,9,1,0,10,0,4,0,1,0,0,0,0,0,0,0,0,0,4,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,5081,442,4639,4446,3775,211,11,427,5,17,193,179,24,23,85,2,41,0,0,0,4,0,0,0,0,0,0,9,2,1,0,3,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,4,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,2845,2634,211,3,12,12,12,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,9,1400000US11001000400,11001000400,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,400.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1541239,69,4,Census Tract 4,S,,1643,998,38.922798900000004,-77.0649214,CT,,,1,1643,1498,1242,84,10,122,0,40,145,133,7,5,12,0,97,3,3,0,5,0,0,0,1,0,0,11,1,2,0,3,1,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1643,165,1478,1430,1214,82,0,122,0,12,48,42,7,5,12,0,11,3,3,0,0,0,0,0,1,0,0,6,0,2,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1410,1284,1060,76,10,110,0,28,126,114,3,5,1,0,94,3,3,0,4,0,0,0,1,0,0,11,1,2,0,3,1,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1410,153,1257,1224,1032,76,0,110,0,6,33,27,3,5,1,0,11,3,3,0,0,0,0,0,1,0,0,6,0,2,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,998,750,248,3,13,0,0,0,0,0,13,0,0,13".Split(','),
                "PLST,DC,140,00,0,0,0,10,1400000US11001000501,11001000501,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,501.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,940249,29503,5.01,Census Tract 5.01,S,,3829,2489,38.926454799999995,-77.051434,CT,,,1,3829,3411,2716,236,13,319,0,127,418,384,45,15,76,0,228,4,2,0,8,0,0,5,0,1,0,33,4,3,0,9,0,0,11,0,0,0,0,0,4,0,2,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3829,451,3378,3203,2624,230,9,315,0,25,175,170,43,14,76,0,31,4,2,0,0,0,0,0,0,0,0,4,0,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3470,3143,2517,220,5,292,0,109,327,302,42,15,49,0,181,4,1,0,5,0,0,4,0,1,0,24,3,2,0,9,0,0,6,0,0,0,0,0,4,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3470,350,3120,2977,2448,214,3,292,0,20,143,139,40,14,49,0,31,4,1,0,0,0,0,0,0,0,0,3,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2489,2247,242,3,37,0,0,0,0,0,37,19,0,18".Split(','),
                "PLST,DC,140,00,0,0,0,11,1400000US11001000502,11001000502,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,502.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,581507,0,5.02,Census Tract 5.02,S,,3418,1881,38.9283547,-77.0595624,CT,,,1,3418,3041,2617,118,5,221,1,79,377,358,33,15,77,1,214,5,4,0,6,0,1,0,0,2,0,14,0,0,0,0,0,0,12,1,1,0,0,0,0,0,0,0,0,0,0,0,4,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,3418,365,3053,2870,2528,105,0,217,0,20,183,179,33,11,73,1,49,3,4,0,2,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,2,2972,2693,2302,110,5,208,1,67,279,260,22,11,42,1,169,2,4,0,6,0,1,0,0,2,0,14,0,0,0,0,0,0,12,1,1,0,0,0,0,0,0,0,0,0,0,0,4,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,2972,289,2683,2548,2229,100,0,208,0,11,135,131,22,11,42,1,46,0,4,0,2,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1881,1760,121,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,12,1400000US11001000600,11001000600,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,600.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1441865,71,6,Census Tract 6,S,,4676,2435,38.9368114,-77.0675114,CT,,,1,4676,4208,3573,237,5,270,0,123,468,447,61,25,102,1,242,4,2,0,7,1,0,1,0,1,0,19,5,2,0,0,0,0,11,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4676,394,4282,4022,3492,226,5,268,0,31,260,252,58,21,98,1,65,4,2,0,2,1,0,0,0,0,0,8,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3848,3544,2991,199,5,245,0,104,304,291,38,25,39,0,179,4,2,0,2,1,0,1,0,0,0,11,1,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3848,298,3550,3400,2933,193,5,243,0,26,150,149,35,21,35,0,49,4,2,0,2,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2435,2249,186,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,13,1400000US11001000702,11001000702,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,702.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,308967,0,7.02,Census Tract 7.02,S,,3452,2472,38.9241271,-77.077893,CT,,,1,3452,3031,2195,280,17,417,1,121,421,384,48,16,63,1,221,8,5,0,21,0,0,0,1,0,0,28,8,2,0,5,0,0,7,1,3,0,0,1,1,0,0,0,0,0,0,0,7,2,0,5,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,3452,445,3007,2799,2079,276,3,413,1,27,208,192,45,10,62,0,47,7,5,0,15,0,0,0,1,0,0,12,5,1,0,2,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,4,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3175,2829,2066,252,17,387,0,107,346,319,35,16,51,1,196,6,5,0,8,0,0,0,1,0,0,21,6,2,0,5,0,0,5,1,1,0,0,0,1,0,0,0,0,0,0,0,4,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,3175,392,2783,2622,1968,248,3,385,0,18,161,150,33,10,50,0,41,5,5,0,5,0,0,0,1,0,0,9,3,1,0,2,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2472,2265,207,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,14,1400000US11001000703,11001000703,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,703.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,232137,0,7.03,Census Tract 7.03,S,,3022,2136,38.9290941,-77.07904620000001,CT,,,1,3022,2728,2182,248,1,230,0,67,294,267,30,13,29,2,169,1,5,0,7,2,0,1,2,4,2,24,4,3,0,7,0,1,3,0,2,0,2,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,1,0,0,0,3022,285,2737,2621,2119,246,0,229,0,27,116,98,28,9,25,2,16,1,5,0,5,2,0,0,1,4,0,15,3,2,0,3,0,1,0,0,2,0,2,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,1,0,0,0,2,2742,2498,2033,210,1,195,0,59,244,228,26,13,20,2,149,1,4,0,7,2,0,0,2,0,2,15,4,1,0,5,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,2742,253,2489,2400,1976,210,0,194,0,20,89,82,24,9,19,2,15,1,4,0,5,2,0,0,1,0,0,6,3,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,2136,1954,182,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,15,1400000US11001000704,11001000704,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,704.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,332346,0,7.04,Census Tract 7.04,S,,2753,1724,38.9300215,-77.0752384,CT,,,1,2753,2420,1772,249,16,238,0,145,333,308,12,11,61,14,188,2,5,0,6,0,0,4,0,4,1,23,5,0,2,0,0,0,8,5,2,0,0,0,0,0,1,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2753,423,2330,2201,1699,234,3,238,0,27,129,118,10,8,61,10,20,0,5,0,2,0,0,0,0,2,0,11,2,0,2,0,0,0,0,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2430,2168,1601,224,16,210,0,117,262,242,6,9,39,9,161,0,5,0,5,0,0,3,0,4,1,18,4,0,2,0,0,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2430,365,2065,1967,1532,209,3,210,0,13,98,89,6,8,39,9,18,0,5,0,2,0,0,0,0,2,0,9,2,0,2,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1724,1554,170,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,16,1400000US11001000802,11001000802,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,802.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1688582,669985,8.02,Census Tract 8.02,S,,3327,1541,38.9126765,-77.0896118,CT,,,1,3327,2938,2245,226,8,386,8,65,389,367,44,9,84,0,207,3,2,0,12,0,0,4,2,0,0,21,4,0,0,7,0,0,6,3,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3327,330,2997,2800,2178,208,0,386,3,25,197,188,44,8,84,0,40,2,2,0,6,0,0,0,2,0,0,8,4,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2669,2412,1836,181,8,321,7,59,257,237,24,6,44,0,146,2,0,0,10,0,0,4,1,0,0,19,4,0,0,7,0,0,6,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2669,237,2432,2314,1790,176,0,321,3,24,118,110,24,6,44,0,27,2,0,0,6,0,0,0,1,0,0,7,4,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1541,1427,114,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,17,1400000US11001000803,11001000803,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,803.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,308153,0,8.03,Census Tract 8.03,S,,3174,1692,38.9336425,-77.0835217,CT,,,1,3174,2770,2251,168,1,274,1,75,404,388,34,10,75,0,256,0,5,0,4,0,0,1,0,3,0,13,3,2,0,6,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3174,391,2783,2620,2169,168,0,274,0,9,163,159,34,9,72,0,34,0,5,0,2,0,0,0,0,3,0,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2864,2536,2063,153,0,254,1,65,328,320,30,7,54,0,217,0,5,0,4,0,0,0,0,3,0,6,1,2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2864,328,2536,2401,1985,153,0,254,0,9,135,131,30,7,51,0,33,0,5,0,2,0,0,0,0,3,0,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1692,1512,180,3,550,0,0,0,0,0,550,550,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,18,1400000US11001000804,11001000804,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,804.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2566768,167978,8.04,Census Tract 8.04,S,,3832,1347,38.922174600000005,-77.0918347,CT,,,1,3832,3454,2854,201,8,322,3,66,378,362,10,11,134,0,191,0,7,1,8,0,0,0,0,0,0,13,0,0,0,6,0,0,0,2,2,0,3,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3832,294,3538,3319,2774,197,0,322,3,23,219,208,10,11,127,0,46,0,7,1,6,0,0,0,0,0,0,9,0,0,0,4,0,0,0,2,0,0,3,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3035,2803,2269,174,7,290,3,60,232,220,6,4,56,0,143,0,2,1,8,0,0,0,0,0,0,10,0,0,0,4,0,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3035,233,2802,2683,2201,172,0,290,3,17,119,109,6,4,56,0,34,0,2,1,6,0,0,0,0,0,0,8,0,0,0,4,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1347,1270,77,3,620,0,0,0,0,0,620,609,0,11".Split(','),
                "PLST,DC,140,00,0,0,0,19,1400000US11001000902,11001000902,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,902.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1867106,307257,9.02,Census Tract 9.02,S,,2317,894,38.9285125,-77.1077517,CT,,,1,2317,2086,1860,76,7,93,0,50,231,213,15,10,65,0,110,6,2,0,4,0,0,0,1,0,0,14,4,2,0,2,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2317,173,2144,2029,1826,76,6,93,0,28,115,105,15,10,60,0,13,3,2,0,1,0,0,0,1,0,0,7,2,2,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1731,1597,1407,61,7,82,0,40,134,118,3,10,26,0,66,6,2,0,4,0,0,0,1,0,0,13,3,2,0,2,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1731,112,1619,1559,1388,61,6,82,0,22,60,50,3,10,21,0,9,3,2,0,1,0,0,0,1,0,0,7,2,2,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,894,839,55,3,0,0,0,0,0,0,0,0,0,0".Split(','),
                "PLST,DC,140,00,0,0,0,20,1400000US11001000903,11001000903,3,5,11,1702382,1.0,H6,1702382.0,,,,,,,,,,,,,,,,903.0,,,,,,,,,,,,,,,,,47900.0,1.0,548.0,47894.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,928101,0,9.03,Census Tract 9.03,S,,4202,484,38.937682099999996,-77.093331,CT,,,1,4202,3916,2589,426,2,672,0,227,286,281,20,1,57,7,171,1,17,0,2,0,0,2,0,3,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4202,583,3619,3507,2416,415,0,671,0,5,112,107,15,0,57,5,12,1,17,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3953,3707,2394,419,1,667,0,226,246,243,20,1,40,7,152,1,17,0,0,0,0,2,0,3,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3953,549,3404,3316,2230,415,0,666,0,5,88,85,15,0,40,5,7,1,17,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,484,442,42,3,2976,0,0,0,0,0,2976,2976,0,0".Split(','),
            };
            
            serializeNodeBlock = new TransformBlock<Map, byte[]>(node =>
            { 
                var resize = false;
                var written = 0;
                if (!buff.IsValueCreated)
                {
                    buff.Value = new byte[1024];
                }
                //Span<byte> buff = stackalloc byte[1014];
                try
                {
                    written = Map.Serializer.Write(new SpanWriter(), buff.Value, node);
                }
                catch (FlatSharp.BufferTooSmallException e)
                {
                    resize = true;
                }

                if (resize)
                {
                    var minSize = Map.Serializer.GetMaxSize(node);
                    if (buff.Value.Length < minSize)
                    {
                        buff.Value = new byte[minSize];
                    }
                    written = Map.Serializer.Write(new SpanWriter(), buff.Value, node);
                }

                return buff.Value[0 .. written].ToArray(); //.Slice(0, written).ToArray();
            }, new ExecutionDataflowBlockOptions(){ MaxDegreeOfParallelism = 12});
        }

        int serialize(Map map, byte[] reuseableWriteSpace)
        {
            try
            {
                return Map.Serializer.Write(new SpanWriter(), reuseableWriteSpace, map);
            }
            catch (FlatSharp.BufferTooSmallException e)
            {
                var minSize = Map.Serializer.GetMaxSize(map);
                if (reuseableWriteSpace.Length < minSize)
                {
                    reuseableWriteSpace = new byte[minSize];
                }
                return Map.Serializer.Write(new SpanWriter(), reuseableWriteSpace, map);
            }
        }      
          
        [Benchmark]
        public void Class1000()
        {
            var kvs = new List<KeyValue>();
            var map = new Map
            {
                Items = kvs
            };
            var buffer = new byte[1024];
            var now = DateTime.Now.ToFileTimeUtc();
            var rowsCount = rows.Length;
            var headerCount = header.Length;
            for (int r = 0; r < 1000; r++)
            {
                var row = rows[r % rowsCount];
                for (int col = 0; col < row.Length && col < headerCount; col++)
                {
                    KeyValue kv = new KeyValue
                    {
                        Key = new Primitive(header[col]), 
                        Value = new Primitive(row[col]), 
                        Timestamp = now
                    };
                    if (!string.IsNullOrWhiteSpace(kv.Value.String))
                    {
                        kvs.Add(kv);
                    }
                }
                // serialize Kvs
                //var writtenSize = serialize(map, buffer);
                
                kvs.Clear();
            }
        }
        private static readonly ThreadLocal<Queue<KeyValue>> SimplePool = new(() => new Queue<KeyValue>());

        [Benchmark]
        public void Class1000Recycled()
        {
            var kvs = new List<KeyValue>();
            var map = new Map
            {
                Items = kvs
            };
            var buffer = new byte[1024];
            var now = DateTime.Now.ToFileTimeUtc();
            var rowsCount = rows.Length;
            var headerCount = header.Length;
            for (int r = 0; r < 1000; r++)
            {
                var row = rows[r % rowsCount];
                for (int col = 0; col < row.Length && col < headerCount; col++)
                {
                    if (!SimplePool.Value.TryDequeue(out var kv))
                    {
                        kv = new KeyValue();
                    }

                    kv.Key = new Primitive(header[col]);
                    kv.Value = new Primitive(row[col]); 
                    kv.Timestamp = now;
                    
                    if (!string.IsNullOrWhiteSpace(kv.Value.String))
                    {
                        kvs.Add(kv);
                    }
                }
                // serialize Kvs
                //var writtenSize = serialize(map, buffer);

                foreach (var item in kvs)
                {
                    SimplePool.Value.Enqueue(item);
                }
                kvs.Clear();
            }
        }
        
        [Benchmark]
        public void Struct1000()
        {
            var kvs = new List<(string,string,long)>();
            var buffer = new byte[1024];
            var now = DateTime.Now.ToFileTimeUtc();
            var rowsCount = rows.Length;
            var headerCount = header.Length;
            for (int r = 0; r < 1000; r++)
            {
                var row = rows[r % rowsCount];
                for (int col = 0; col < row.Length && col < headerCount; col++)
                {
                    var kv = (Key : header[col], Value : row[col], Timestamp : now );
                    if (!string.IsNullOrWhiteSpace(kv.Value))
                    {
                        kvs.Add(kv);
                    }
                }
                // serialize Kvs
                //var writtenSize = serialize(map, buffer);
                
                kvs.Clear();
            }
        }
        
        [Benchmark(Baseline = true)]
        
        public void DataProvider1000()
        {
            var kvs = new List<(int,Func<int,(string,string,long)>)>();
            var buffer = new byte[1024];
            var now = DateTime.Now.ToFileTimeUtc();
            var rowsCount = rows.Length;
            var headerCount = header.Length;
            for (int r = 0; r < 1000; r++)
            {
                var row = rows[r % rowsCount];
                for (int col = 0; col < row.Length && col < headerCount; col++)
                {
                    var f = new Func<int,(string,string,long)>((i) =>
                    {
                        return (Key: header[i], Value: row[i], Timestamp: now);
                    });
                    //var kv = (Key : header[col], Value : row[col], Timestamp : now );
                    kvs.Add((col, f));
                }
                // serialize Kvs
                //var writtenSize = serialize(map, buffer);
                
                kvs.Clear();
            }
        }
    }
}